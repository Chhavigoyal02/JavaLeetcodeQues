class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        int[][] dp=new int[s.length()][s.length()];
        for(int i=0;i<s.length();i++){
            Arrays.fill(dp[i],-1);
        }
        return rec(0,0,s,new HashSet<>(wordDict),dp);
    }
    public static boolean rec(int start,int end,String s,Set<String> wd,int[][] dp){
        if(dp[start][end]!=-1) return dp[start][end]==1?true:false;
        if(end==s.length()-1){
            if(wd.contains(s.substring(start,end+1))) return true;
            return false;
        }
        if(wd.contains(s.substring(start,end+1))){
            if(rec(end+1,end+1,s,wd,dp)){
                dp[start][end]=1;
                return true;
            }
        }
        dp[start][end]=rec(start,end+1,s,wd,dp)?1:0;
        return dp[start][end]==1?true:false;
    }
}
