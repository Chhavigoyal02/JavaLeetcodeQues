class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> stack=new Stack<>();
        for (String token:tokens) {
            if (isOperator(token)) {
                int b=stack.pop();
                int a=stack.pop();
                int result=applyOperator(a,b,token);
                stack.push(result);
            } 
            else stack.push(Integer.parseInt(token));
        }
        return stack.pop();
    }
    public boolean isOperator(String token) {
        return token.equals("+") || token.equals("-") || token.equals("*") || token.equals("/");
    }
    public int applyOperator(int a, int b, String operator) {
        switch (operator) {
            case "+":
                return a+b;
            case "-":
                return a-b;
            case "*":
                return a*b;
            case "/":
                return a/b;
        }
        return 0;
    }
}
