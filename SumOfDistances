class Solution {
    public long[] distance(int[] nums) {
         Map<Integer, List<Integer>> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            map.putIfAbsent(nums[i], new ArrayList<>());
            map.get(nums[i]).add(i);
        }
        long[] res = new long[nums.length];
        for (List<Integer> indices : map.values()) {
            if (indices.size() == 1) {
                res[indices.get(0)] = 0;
                continue;
            }
            Collections.sort(indices);
            int n = indices.size();
            long[] sum = new long[n];
            sum[0] = indices.get(0);
            for (int i=1;i<n;i++) {
                sum[i]=sum[i-1]+indices.get(i);
            }
            for (int i=0;i<n;i++) {
                int idx = indices.get(i);
                long left=(i>0)?(idx*(long)i-sum[i-1]):0;
                long right = (i<n-1)?(sum[n-1]-sum[i]-idx*(long)(n-i-1)):0;
                res[idx]=left+right;
            }
        }
        return res;
    }
}
