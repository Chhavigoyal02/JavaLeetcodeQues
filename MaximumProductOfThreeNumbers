class Solution {
    public int maximumProduct(int[] nums) {
            int min1 = Integer.MAX_VALUE, min2 = Integer.MAX_VALUE;
            int max1 = Integer.MIN_VALUE, max2 = Integer.MIN_VALUE, max3 = Integer.MIN_VALUE;
            for (int i=0;i<nums.length;i++) {
                if (nums[i] <= min1) {
                    min2 = min1;
                    min1 = nums[i];
                } else if (nums[i] <= min2) {
                    min2 = nums[i];
                }
                if (nums[i] >= max1) {
                    max3 = max2;
                    max2 = max1;
                    max1 = nums[i];
                } else if (nums[i] >= max2) {
                    max3 = max2;
                    max2 = nums[i];
                } else if (nums[i] >= max3) {
                    max3 = nums[i];
                }
            }
            return Math.max(min1 * min2 * max1, max1 * max2 * max3);



            Another Approach
            // int n=nums.length;
            // Arrays.sort(nums);
            // int prod1 = nums[0]*nums[1]*nums[n-1];
            // int prod2= nums[n-1]*nums[n-2]*nums[n-3];

            // System.out.print(Math.max(prod1,prod2));
            //  return Math.max(prod1,prod2);
    }
}
