class Solution {
    public void solveSudoku(char[][] board) {
        sudoku(board, 0);
    }
    public static boolean sudoku(char[][] board, int s) {
		if (s == 81)
        return true;
        final int i = s / 9;
        final int j = s % 9;
        if (board[i][j] != '.')
        return sudoku(board, s + 1);
        for (char c = '1'; c <= '9'; ++c)
        if (isitsafe(board, i, j, c)) {
            board[i][j] = c;
            if (sudoku(board, s + 1))
            return true;
            board[i][j] = '.';
        }
        return false;
	}

	public static boolean isitsafe(char[][] grid, int row, int col, char val) {
		// for row
		for (int i = 0; i < grid[0].length; i++) {
			if (grid[row][i] == val) {
				return false;
			}
		}
		// for col
		for (int i = 0; i < grid.length; i++) {
			if (grid[i][col] == val) {
				return false;
			}
		}
		// for 3*3 matrix
		int r = row - row % 3;
		int c = col - col % 3;
		for(int i=r;i<r+3;i++) {
			for(int j=c;j<c+3;j++) {
				if (grid[i][j] == val) {
					return false;
				}
			}
		}
		return true;
	}
}
