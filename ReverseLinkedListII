/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if(head == null || head.next == null || left==right){
            return head;
        } 
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prevNode = dummy;
        for(int i=0;i<left-1;i++){
            prevNode=prevNode.next;
        }
        ListNode startNode = prevNode.next;
        ListNode then = startNode.next;
        for (int i = 0; i < right - left; i++) {
            startNode.next = then.next;
            then.next = prevNode.next;
            prevNode.next = then;
            then = startNode.next;
        }
        return dummy.next; 
    }
}
